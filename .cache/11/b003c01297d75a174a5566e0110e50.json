{"id":"hooks/useFetch.js","dependencies":[{"name":"C:\\Users\\natna\\Desktop\\dataViz\\package.json","includedInParent":true,"mtime":1619549552738},{"name":"d3-fetch","loc":{"line":1,"column":20},"parent":"C:\\Users\\natna\\Desktop\\dataViz\\hooks\\useFetch.js","resolved":"C:\\Users\\natna\\Desktop\\dataViz\\node_modules\\d3-fetch\\src\\index.js"},{"name":"react","loc":{"line":2,"column":36},"parent":"C:\\Users\\natna\\Desktop\\dataViz\\hooks\\useFetch.js","resolved":"C:\\Users\\natna\\Desktop\\dataViz\\node_modules\\react\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useFetch = void 0;\n\nvar _d3Fetch = require(\"d3-fetch\");\n\nvar _react = require(\"react\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar useFetch = function useFetch(url) {\n  var _useState = (0, _react.useState)([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  function fetchUrl() {\n    return _fetchUrl.apply(this, arguments);\n  }\n\n  function _fetchUrl() {\n    _fetchUrl = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return (0, _d3Fetch.csv)(url);\n\n            case 2:\n              response = _context.sent;\n              setData(response);\n              setLoading(false);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchUrl.apply(this, arguments);\n  }\n\n  (0, _react.useEffect)(function () {\n    fetchUrl();\n  }, []);\n  return [data, loading];\n};\n\nexports.useFetch = useFetch;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"hooks/useFetch.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"hooks/useFetch.js","original":{"line":2,"column":0}},{"generated":{"line":28,"column":0},"source":"hooks/useFetch.js","original":{"line":3,"column":0}},{"name":"useFetch","generated":{"line":28,"column":4},"source":"hooks/useFetch.js","original":{"line":3,"column":6}},{"generated":{"line":28,"column":12},"source":"hooks/useFetch.js","original":{"line":3,"column":14}},{"generated":{"line":28,"column":15},"source":"hooks/useFetch.js","original":{"line":3,"column":17}},{"name":"useFetch","generated":{"line":28,"column":24},"source":"hooks/useFetch.js","original":{"line":3,"column":6}},{"generated":{"line":28,"column":32},"source":"hooks/useFetch.js","original":{"line":3,"column":17}},{"name":"url","generated":{"line":28,"column":33},"source":"hooks/useFetch.js","original":{"line":3,"column":18}},{"generated":{"line":28,"column":36},"source":"hooks/useFetch.js","original":{"line":3,"column":17}},{"generated":{"line":28,"column":38},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":29,"column":0},"source":"hooks/useFetch.js","original":{"line":4,"column":2}},{"generated":{"line":29,"column":18},"source":"hooks/useFetch.js","original":{"line":4,"column":26}},{"generated":{"line":29,"column":39},"source":"hooks/useFetch.js","original":{"line":4,"column":35}},{"generated":{"line":29,"column":41},"source":"hooks/useFetch.js","original":{"line":4,"column":26}},{"generated":{"line":29,"column":42},"source":"hooks/useFetch.js","original":{"line":4,"column":2}},{"generated":{"line":30,"column":0},"source":"hooks/useFetch.js","original":{"line":4,"column":2}},{"generated":{"line":31,"column":0},"source":"hooks/useFetch.js","original":{"line":4,"column":2}},{"name":"data","generated":{"line":31,"column":6},"source":"hooks/useFetch.js","original":{"line":4,"column":9}},{"generated":{"line":31,"column":10},"source":"hooks/useFetch.js","original":{"line":4,"column":2}},{"generated":{"line":32,"column":0},"source":"hooks/useFetch.js","original":{"line":4,"column":2}},{"name":"setData","generated":{"line":32,"column":6},"source":"hooks/useFetch.js","original":{"line":4,"column":15}},{"generated":{"line":32,"column":13},"source":"hooks/useFetch.js","original":{"line":4,"column":2}},{"generated":{"line":34,"column":0},"source":"hooks/useFetch.js","original":{"line":5,"column":2}},{"generated":{"line":34,"column":19},"source":"hooks/useFetch.js","original":{"line":5,"column":32}},{"generated":{"line":34,"column":40},"source":"hooks/useFetch.js","original":{"line":5,"column":41}},{"generated":{"line":34,"column":44},"source":"hooks/useFetch.js","original":{"line":5,"column":32}},{"generated":{"line":34,"column":45},"source":"hooks/useFetch.js","original":{"line":5,"column":2}},{"generated":{"line":35,"column":0},"source":"hooks/useFetch.js","original":{"line":5,"column":2}},{"generated":{"line":36,"column":0},"source":"hooks/useFetch.js","original":{"line":5,"column":2}},{"name":"loading","generated":{"line":36,"column":6},"source":"hooks/useFetch.js","original":{"line":5,"column":9}},{"generated":{"line":36,"column":13},"source":"hooks/useFetch.js","original":{"line":5,"column":2}},{"generated":{"line":37,"column":0},"source":"hooks/useFetch.js","original":{"line":5,"column":2}},{"name":"setLoading","generated":{"line":37,"column":6},"source":"hooks/useFetch.js","original":{"line":5,"column":18}},{"generated":{"line":37,"column":16},"source":"hooks/useFetch.js","original":{"line":5,"column":2}},{"generated":{"line":39,"column":0},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"name":"fetchUrl","generated":{"line":39,"column":11},"source":"hooks/useFetch.js","original":{"line":6,"column":17}},{"generated":{"line":39,"column":19},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":40,"column":0},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":41,"column":0},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":43,"column":0},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":44,"column":0},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":44,"column":72},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":45,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":46,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":47,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":48,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":49,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":50,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":51,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":51,"column":21},"source":"hooks/useFetch.js","original":{"line":7,"column":27}},{"name":"url","generated":{"line":51,"column":39},"source":"hooks/useFetch.js","original":{"line":7,"column":31}},{"generated":{"line":51,"column":42},"source":"hooks/useFetch.js","original":{"line":7,"column":27}},{"generated":{"line":51,"column":43},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":53,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"name":"response","generated":{"line":54,"column":0},"source":"hooks/useFetch.js","original":{"line":7,"column":10}},{"name":"response","generated":{"line":54,"column":14},"source":"hooks/useFetch.js","original":{"line":7,"column":10}},{"generated":{"line":54,"column":22},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"name":"setData","generated":{"line":55,"column":0},"source":"hooks/useFetch.js","original":{"line":8,"column":4}},{"name":"setData","generated":{"line":55,"column":14},"source":"hooks/useFetch.js","original":{"line":8,"column":4}},{"generated":{"line":55,"column":21},"source":"hooks/useFetch.js","original":{"line":8,"column":11}},{"name":"response","generated":{"line":55,"column":22},"source":"hooks/useFetch.js","original":{"line":8,"column":12}},{"generated":{"line":55,"column":30},"source":"hooks/useFetch.js","original":{"line":8,"column":11}},{"generated":{"line":55,"column":31},"source":"hooks/useFetch.js","original":{"line":8,"column":4}},{"name":"setLoading","generated":{"line":56,"column":0},"source":"hooks/useFetch.js","original":{"line":9,"column":4}},{"name":"setLoading","generated":{"line":56,"column":14},"source":"hooks/useFetch.js","original":{"line":9,"column":4}},{"generated":{"line":56,"column":24},"source":"hooks/useFetch.js","original":{"line":9,"column":14}},{"generated":{"line":56,"column":25},"source":"hooks/useFetch.js","original":{"line":9,"column":15}},{"generated":{"line":56,"column":30},"source":"hooks/useFetch.js","original":{"line":9,"column":14}},{"generated":{"line":56,"column":31},"source":"hooks/useFetch.js","original":{"line":9,"column":4}},{"generated":{"line":58,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":59,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":60,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":61,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":62,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":63,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":64,"column":0},"source":"hooks/useFetch.js","original":{"line":6,"column":2}},{"generated":{"line":64,"column":5},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":65,"column":0},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":66,"column":0},"source":"hooks/useFetch.js","original":{"line":3,"column":26}},{"generated":{"line":68,"column":0},"source":"hooks/useFetch.js","original":{"line":11,"column":2}},{"generated":{"line":68,"column":24},"source":"hooks/useFetch.js","original":{"line":11,"column":12}},{"generated":{"line":68,"column":36},"source":"hooks/useFetch.js","original":{"line":11,"column":18}},{"name":"fetchUrl","generated":{"line":69,"column":0},"source":"hooks/useFetch.js","original":{"line":12,"column":4}},{"name":"fetchUrl","generated":{"line":69,"column":4},"source":"hooks/useFetch.js","original":{"line":12,"column":4}},{"generated":{"line":69,"column":12},"source":"hooks/useFetch.js","original":{"line":12,"column":12}},{"generated":{"line":70,"column":0},"source":"hooks/useFetch.js","original":{"line":13,"column":3}},{"generated":{"line":70,"column":3},"source":"hooks/useFetch.js","original":{"line":11,"column":2}},{"generated":{"line":70,"column":5},"source":"hooks/useFetch.js","original":{"line":13,"column":5}},{"generated":{"line":70,"column":7},"source":"hooks/useFetch.js","original":{"line":11,"column":2}},{"generated":{"line":71,"column":0},"source":"hooks/useFetch.js","original":{"line":14,"column":2}},{"generated":{"line":71,"column":9},"source":"hooks/useFetch.js","original":{"line":14,"column":9}},{"name":"data","generated":{"line":71,"column":10},"source":"hooks/useFetch.js","original":{"line":14,"column":10}},{"generated":{"line":71,"column":14},"source":"hooks/useFetch.js","original":{"line":14,"column":9}},{"name":"loading","generated":{"line":71,"column":16},"source":"hooks/useFetch.js","original":{"line":14,"column":16}},{"generated":{"line":71,"column":23},"source":"hooks/useFetch.js","original":{"line":14,"column":9}},{"generated":{"line":71,"column":24},"source":"hooks/useFetch.js","original":{"line":14,"column":2}},{"generated":{"line":72,"column":0},"source":"hooks/useFetch.js","original":{"line":15,"column":1}},{"generated":{"line":72,"column":1},"source":"hooks/useFetch.js","original":{"line":3,"column":0}}],"sources":{"hooks/useFetch.js":"import { csv } from \"d3-fetch\";\r\nimport { useState, useEffect } from \"react\";\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  async function fetchUrl() {\r\n    const response = await csv(url);\r\n    setData(response);\r\n    setLoading(false);\r\n  }\r\n  useEffect(() => {\r\n    fetchUrl();\r\n  }, []);\r\n  return [data, loading];\r\n};\r\nexport { useFetch };"},"lineCount":null}},"error":null,"hash":"6c0dfd42ee336717928f1e608aa7da14","cacheData":{"env":{}}}